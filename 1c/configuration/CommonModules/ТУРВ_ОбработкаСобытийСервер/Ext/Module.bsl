#Область ПрограммныйИнтерфейс

Процедура ЗарегистрироватьЗаписьСсылочногоОбъекта(Объект, ЭтоНовый = Ложь) Экспорт
	
	Если Не (Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект)) Или Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект)))
			И Объект.ДополнительныеСвойства.Свойство("НеРегистрироватьВОбмене") Тогда
		Возврат;
	КонецЕсли;	

	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиПовтИсп.НастройкиСервиса()).АдресСервера) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭтоНовый = Неопределено И Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ЭтоНовый = Истина;
		УстановитьПривилегированныйРежим(Ложь);
		Возврат
		
	ИначеЕсли ЭтоНовый = Истина Тогда	
		РегистрыСведений.ТУРВ_ОчередьОбменаСсылочнымиДанными.ЗарегистрироватьДобавлениеОбъекта(Объект.Ссылка);	
	Иначе
		РегистрыСведений.ТУРВ_ОчередьОбменаСсылочнымиДанными.ЗарегистрироватьИзменениеОбъекта(Объект.Ссылка);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗарегистрироватьЗаписьРегистраСведений(НаборЗаписей) Экспорт  
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиПовтИсп.НастройкиСервиса()).АдресСервера) Тогда
		Возврат;
	КонецЕсли; 
	
	МассивПользователейЛК = ТУРВ_ОбменДаннымиПовтИсп.МассивПользователейЛК();
	ТипОбъекта	= ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().РСНЗ;
	ИмяОбъекта = НаборЗаписей.Метаданные().Имя;
	
	Если ИмяОбъекта = "ФотографииФизическихЛиц" Тогда
		
		Объект1С = Новый Соответствие;

		//Удаление записи 
		Если НаборЗаписей.Количество() = 0 И НаборЗаписей.Отбор.ФизическоеЛицо.Использование И ЗначениеЗаполнено(НаборЗаписей.Отбор.ФизическоеЛицо.Значение) Тогда
			Если МассивПользователейЛК.Найти(НаборЗаписей.Отбор.ФизическоеЛицо.Значение) = Неопределено  Тогда
				Возврат;
			Иначе
				Объект1С.Вставить(НаборЗаписей.Отбор.ФизическоеЛицо.Значение);
			КонецЕсли;
		//Массовое удаление	
		ИначеЕсли НаборЗаписей.Количество() = 0 И Не НаборЗаписей.Отбор.ФизическоеЛицо.Использование Тогда
		
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
							|	ФотографииФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо
							|ИЗ
							|	РегистрСведений.ФотографииФизическихЛиц КАК ФотографииФизическихЛиц
							|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТУРБ_ПользователиЛК КАК ТУРБ_ПользователиЛК
							|	";

			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Объект1С.Вставить(Выборка.ФизическоеЛицо);
			КонецЦикла;
			
		//Добавление записей	
		Иначе	
		
			Для Каждого СтрокаНабора Из НаборЗаписей Цикл
				
				Если МассивПользователейЛК.Найти(СтрокаНабора.ФизическоеЛицо) <> Неопределено  Тогда
					Объект1С.Вставить(СтрокаНабора.ФизическоеЛицо);
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЕсли;
	ИначеЕсли ИмяОбъекта = "КадроваяИсторияСотрудников" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
						|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
						|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
						|ИЗ
						|	РегистрСведений.ТУРБ_ПользователиЛК КАК ТУРБ_ПользователиЛК
						|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
						|		ПО (КадроваяИсторияСотрудников.ФизическоеЛицо = ТУРБ_ПользователиЛК.ФизическоеЛицо)
						|ГДЕ
						|	КадроваяИсторияСотрудников.Регистратор = &Регистратор";
		
		Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
		
		Попытка
			ТЗ = Запрос.Выполнить().Выгрузить();	
		Исключение
			
			Объект = СтрШаблон(	"{name: ""%1""}", ИмяОбъекта);
								
			ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
												ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
												ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,				
												ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектСтрока(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																					ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																					,
																					ТипОбъекта, 
																					ИмяОбъекта, 
																					"РегистрыСведений.ЗарегистрироватьЗаписьРегистраСведений.ВыгрузкаДанныхЗапроса",
																					ОписаниеОшибки()));			
			УстановитьПривилегированныйРежим(Ложь);
			Возврат;
			
		КонецПопытки;
				
		Для Каждого Запись Из НаборЗаписей Цикл
			
			Если МассивПользователейЛК.Найти(Запись.ФизическоеЛицо) = Неопределено  Тогда
				Продолжить;
			КонецЕсли;	
			
			НоваяСтрокаТЗ = ТЗ.Добавить();
			НоваяСтрокаТЗ.Сотрудник      = Запись.Сотрудник;
			НоваяСтрокаТЗ.ФизическоеЛицо = Запись.ФизическоеЛицо;
			
		КонецЦикла;
		
		ТЗ.Свернуть("Сотрудник, ФизическоеЛицо");
		
		Для Каждого СтрокаТЗ Из Тз  Цикл	
			
			Структура = Новый Структура;
			Структура.Вставить("Сотрудник",      СтрокаТЗ.Сотрудник);
			Структура.Вставить("ФизическоеЛицо", СтрокаТЗ.ФизическоеЛицо);

			ДанныеJSON = ТУРВ_РаботаСJSONСервер.ЗаписьJSON(Структура);	
			
			ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.CRC32);
			ХешированиеДанных.Добавить(ДанныеJSON);
			ХешСумма = ХешированиеДанных.ХешСумма;
			
			РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.ЗарегистрироватьДобавлениеОбъекта(ТипОбъекта, ИмяОбъекта, ХешСумма, ДанныеJSON);
			
		КонецЦикла;
		
		Возврат;
		
	ИначеЕсли ИмяОбъекта = "ГрафикиРаботыПоВидамВремени" Тогда
		
		Если НаборЗаписей.Отбор.ГрафикРаботы.Использование И ЗначениеЗаполнено(НаборЗаписей.Отбор.ГрафикРаботы.Значение)
			И ТипЗнч(НаборЗаписей.Отбор.ГрафикРаботы.Значение) = Тип("СправочникСсылка.ГрафикиРаботыСотрудников") 
			И НаборЗаписей.Отбор.Месяц.Использование И ЗначениеЗаполнено(НаборЗаписей.Отбор.Месяц.Значение)  Тогда
			
			Если НаборЗаписей.Количество() = 0 Тогда
				Возврат;
			КонецЕсли;	
		
			Структура = Новый Структура;
			Структура.Вставить("ГрафикРаботы",     НаборЗаписей.Отбор.ГрафикРаботы.Значение);
			Структура.Вставить("Месяц",            НаборЗаписей.Отбор.Месяц.Значение);

			ДанныеJSON = ТУРВ_РаботаСJSONСервер.ЗаписьJSON(Структура);	
			
			ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.CRC32);
			ХешированиеДанных.Добавить(ДанныеJSON);
			ХешСумма = ХешированиеДанных.ХешСумма;
			
			РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.ЗарегистрироватьДобавлениеОбъекта(ТипОбъекта, ИмяОбъекта, ХешСумма, ДанныеJSON);
			
			Возврат;
			
		Иначе 
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ИмяОбъекта = "ГрафикРаботыСотрудников" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
						|	НАЧАЛОПЕРИОДА(ГрафикРаботыСотрудников.Период, День) КАК Период,
						|	ГрафикРаботыСотрудников.Сотрудник КАК Сотрудник
						|ИЗ
						|	РегистрСведений.ГрафикРаботыСотрудников КАК ГрафикРаботыСотрудников
						|ГДЕ
						|	ГрафикРаботыСотрудников.Регистратор = &Регистратор
						|";
		Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
		
		Попытка
			ТЗ = Запрос.Выполнить().Выгрузить();	
		Исключение
			
			Объект = СтрШаблон(	"{name: ""%1""}", ИмяОбъекта);
								
			ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
												ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
												ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,				
												ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектСтрока(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																					ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																					,
																					ТипОбъекта, 
																					ИмяОбъекта, 
																					"РегистрыСведений.ЗарегистрироватьЗаписьРегистраСведений.ВыгрузкаДанныхЗапроса",
																					ОписаниеОшибки()));			
			УстановитьПривилегированныйРежим(Ложь);
			Возврат;
			
		КонецПопытки;
				
		Для Каждого Запись Из НаборЗаписей Цикл			
			
			НоваяСтрокаТЗ = ТЗ.Добавить();
			НоваяСтрокаТЗ.Сотрудник     = Запись.Сотрудник;
			НоваяСтрокаТЗ.Период 		= НачалоДня(Запись.Период);
			
		КонецЦикла;
		
		ТЗ.Свернуть("Сотрудник, Период");
		
		Для Каждого СтрокаТЗ Из Тз  Цикл	
			
			Структура = Новый Структура;
			Структура.Вставить("Сотрудник", СтрокаТЗ.Сотрудник);
			Структура.Вставить("Период", 	СтрокаТЗ.Период);

			ДанныеJSON = ТУРВ_РаботаСJSONСервер.ЗаписьJSON(Структура);	
			
			ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.CRC32);
			ХешированиеДанных.Добавить(ДанныеJSON);
			ХешСумма = ХешированиеДанных.ХешСумма;
			
			РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.ЗарегистрироватьДобавлениеОбъекта(ТипОбъекта, ИмяОбъекта, ХешСумма, ДанныеJSON);
			
		КонецЦикла;
		
		Возврат;
		
	Иначе
		
		Объект1С = НаборЗаписей.ВыгрузитьКолонки();
		Для Каждого СтрокаНабора Из НаборЗаписей Цикл
			
			Если МассивПользователейЛК.Найти(СтрокаНабора.ФизическоеЛицо) = Неопределено  Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Объект1С.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНабора);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Если Объект1С.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Объект1СJSON = ТУРВ_РаботаСJSONСервер.ЗаписьJSON(Объект1С);
	
	Структура = Новый Структура;
	Структура.Вставить("ТипОбъекта", ТипОбъекта);
	Структура.Вставить("ИмяОбъекта", ИмяОбъекта);
	Структура.Вставить("Объект",     Объект1СJSON);
				
	Попытка
		ДанныеJSON = ТУРВ_РаботаСJSONСервер.ЗаписатьJSON_АП(Структура);		
	Исключение
		
		Объект = СтрШаблон(	"{name: ""%1"", object: %2}", 
							ИмяОбъекта, 
							Объект1С);
							
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТипОбъекта,
																				ИмяОбъекта,
																				Объект, 
																				"РегистрыСведений.ЗарегистрироватьЗаписьРегистраСведений.ЗаписатьJSON_АП",
																				ОписаниеОшибки()));											
			
		УстановитьПривилегированныйРежим(Ложь);
		Возврат;
		
	КонецПопытки;
	
	ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.CRC32);
 	ХешированиеДанных.Добавить(ДанныеJSON);
 	ХешСумма = ХешированиеДанных.ХешСумма;   
	
	Если НаборЗаписей.Количество() = 0 Тогда
		РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.ЗарегистрироватьУдалениеОбъекта(ТипОбъекта, ИмяОбъекта, ХешСумма, ДанныеJSON);
	Иначе 	
		РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.ЗарегистрироватьДобавлениеОбъекта(ТипОбъекта, ИмяОбъекта, ХешСумма, ДанныеJSON);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры	

Процедура ЗарегистрироватьЗаписьРегистраНакоплений(НаборЗаписей) Экспорт  
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиПовтИсп.НастройкиСервиса()).АдресСервера) Тогда
		Возврат;
	КонецЕсли; 
	
	МассивПользователейЛК = ТУРВ_ОбменДаннымиПовтИсп.МассивПользователейЛК();
	
	ИмяМетаданных = НаборЗаписей.Метаданные().Имя;
	ТипОбъекта = ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().РННЗ;
	
	Если ИмяМетаданных = Метаданные.РегистрыНакопления.ДанныеИндивидуальныхГрафиковСотрудников.Имя  Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = " ВЫБРАТЬ
						|	ДанныеИндивидуальныхГрафиковСотрудников.Сотрудник КАК Сотрудник,
						|	ДанныеИндивидуальныхГрафиковСотрудников.Период КАК Период
						|ИЗ
						|	РегистрНакопления.ДанныеИндивидуальныхГрафиковСотрудников КАК ДанныеИндивидуальныхГрафиковСотрудников
						|ГДЕ
						|	ДанныеИндивидуальныхГрафиковСотрудников.Регистратор = &Регистратор
						|";

		Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
		
		Попытка
			ТЗ = Запрос.Выполнить().Выгрузить();	
		Исключение
			
			Объект = СтрШаблон(	"{name: ""%1""}", ИмяМетаданных);
								
			ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
												ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
												ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,				
												ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектСтрока(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																					ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																					,
																					ТипОбъекта, 
																					ИмяМетаданных, 
																					"РегистрыСведений.ЗарегистрироватьЗаписьРегистраНакоплений.ВыгрузкаДанныхЗапроса",
																					ОписаниеОшибки()));			
			УстановитьПривилегированныйРежим(Ложь);
			Возврат;
			
		КонецПопытки;
				
		Для Каждого Запись Из НаборЗаписей Цикл
			
			НоваяСтрокаТЗ = ТЗ.Добавить();
			НоваяСтрокаТЗ.Сотрудник = Запись.Сотрудник;
			НоваяСтрокаТЗ.Период	= Запись.Период;
			
		КонецЦикла;
		
		ТЗ.Свернуть("Сотрудник, Период");
		
		Для Каждого СтрокаТЗ Из Тз  Цикл

			ТипОбъекта	= ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().РННЗ;
			
			Структура = Новый Структура;
			Структура.Вставить("Сотрудник", СтрокаТЗ.Сотрудник);
			Структура.Вставить("Период",    СтрокаТЗ.Период);

			ДанныеJSON = ТУРВ_РаботаСJSONСервер.ЗаписьJSON(Структура);	
			
			ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.CRC32);
			ХешированиеДанных.Добавить(ДанныеJSON);
			ХешСумма = ХешированиеДанных.ХешСумма;
			
			РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.ЗарегистрироватьДобавлениеОбъекта(ТипОбъекта, ИмяМетаданных, ХешСумма, ДанныеJSON);
		КонецЦикла;
	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры	

#КонецОбласти