#Область ПрограммныйИнтерфейс

#Область РегистрацияДанных

Процедура ЗарегистрироватьДобавлениеОбъекта(ТипОбъкта, ИмяОбъекта, ХЭШ, Данные) Экспорт 
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ТипОбъкта   = ТипОбъкта;
	МенеджерЗаписи.ВидСобытия  = Перечисления.ТУРВ_ВидыСобытийСОбъектамиЛК.Добавление;
	МенеджерЗаписи.ХЭШ         = ХЭШ;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Новый;
	МенеджерЗаписи.Данные      = Данные;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДата();
	МенеджерЗаписи.ИмяОбъекта  = ИмяОбъекта;
	
	Попытка
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Информация,	
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТипОбъкта,
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьДобавлениеОбъекта"));

	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,			
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТипОбъкта,
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьДобавлениеОбъекта",
																				ОписаниеОшибки()));
	КонецПопытки;

КонецПроцедуры

Процедура ЗарегистрироватьИзменениеОбъекта(ТипОбъкта, ИмяОбъекта, ХЭШ, Данные) Экспорт 
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ТипОбъкта    = ТипОбъкта;
	МенеджерЗаписи.ВидСобытия  = Перечисления.ТУРВ_ВидыСобытийСОбъектамиЛК.Изменение;
	МенеджерЗаписи.ХЭШ         = ХЭШ;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Новый;
	МенеджерЗаписи.Данные      = Данные;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДата();
	МенеджерЗаписи.ИмяОбъекта  = ИмяОбъекта;
	
	Попытка
		МенеджерЗаписи.Записать();

		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Информация,	
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТипОбъкта, 
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьИзменениеОбъекта"));
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,			
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТипОбъкта, 
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьИзменениеОбъекта",
																				ОписаниеОшибки()));
	КонецПопытки;
		
КонецПроцедуры

Процедура ЗарегистрироватьУдалениеОбъекта(ТипОбъкта, ИмяОбъекта, ХЭШ, Данные) Экспорт 
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ТипОбъкта    = ТипОбъкта;
	МенеджерЗаписи.ВидСобытия  = Перечисления.ТУРВ_ВидыСобытийСОбъектамиЛК.Удаление;
	МенеджерЗаписи.ХЭШ         = ХЭШ;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Новый;
	МенеджерЗаписи.Данные      = Данные;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДата();
	МенеджерЗаписи.ИмяОбъекта  = ИмяОбъекта;
	
	Попытка	
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Информация,	
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТипОбъкта, 
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьУдалениеОбъекта"));
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,			
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТипОбъкта, 
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьУдалениеОбъекта",
																				ОписаниеОшибки()));
	КонецПопытки;
		
КонецПроцедуры

#КонецОбласти

#Область ИзменениеСтатуса

Процедура ЗарегистрироватьОшибкуОбработки(ИД, ТипОбъкта, ИмяОбъекта, ВидСобытия, ХЭШ, Данные, МестоВозникновения = "", Ошибка = "") Экспорт 
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ТипОбъкта    = ТипОбъкта;
	МенеджерЗаписи.ВидСобытия  = ВидСобытия;
	МенеджерЗаписи.ХЭШ         = ХЭШ;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Ошибка;
	МенеджерЗаписи.Данные      = Данные;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДата();
	МенеджерЗаписи.ИД          = ИД;
	МенеджерЗаписи.ИмяОбъекта  = ИмяОбъекта;

	Попытка
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,			
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД,
																				ТипОбъкта, 
																				ИмяОбъекта,
																				Данные, 
																				МестоВозникновения,
																				Ошибка));
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,			
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД,
																				ТипОбъкта,
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьОшибкуОбработки",
																				ОписаниеОшибки()));
	КонецПопытки;
		
КонецПроцедуры

Процедура ЗарегистрироватьУспехОбработки(ИД, ТипОбъкта, ИмяОбъекта, ВидСобытия, ХЭШ, Данные) Экспорт 
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаПроизвольнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ТипОбъкта    = ТипОбъкта;
	МенеджерЗаписи.ВидСобытия  = ВидСобытия;
	МенеджерЗаписи.ХЭШ         = ХЭШ;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Выполнен;
	МенеджерЗаписи.Данные      = Данные;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДата();
	МенеджерЗаписи.ИД		   = ИД;
	МенеджерЗаписи.ИмяОбъекта  = ИмяОбъекта;

	Попытка	
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Информация,	
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД,
																				ТипОбъкта, 
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьУдалениеОбъекта"));	
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,			
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД,
																				ТипОбъкта, 
																				ИмяОбъекта,
																				Данные, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКПроизвольнымиДанными.ЗарегистрироватьУспехОбработки",
																				ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти