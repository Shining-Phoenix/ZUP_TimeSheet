#Область ПрограммныйИнтерфейс

#Область РегистрацияДанных

Процедура ЗарегистрироватьДобавлениеОбъекта(ОбъектСсылка) Экспорт 
	
	ИмяМетаданных = ОбъектСсылка.Метаданные().Имя;
	Объект = СтрШаблон(	"{name: ""%1"", object: ""%2""}", 
						ИмяМетаданных, 
						Строка(ОбъектСсылка.УникальныйИдентификатор()));
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаСсылочнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект      = ОбъектСсылка;
	МенеджерЗаписи.ВидСобытия  = Перечисления.ТУРВ_ВидыСобытийСОбъектамиЛК.Добавление;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Новый;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДатаСеанса();
	
	Попытка
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Информация,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС, 
																				ИмяМетаданных,
																				Объект, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКСсылочнымиДанными.ЗарегистрироватьДобавлениеОбъекта"));
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС, 
																				ИмяМетаданных,
																				Объект, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКСсылочнымиДанными.ЗарегистрироватьДобавлениеОбъекта",
																				ОписаниеОшибки()));
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменениеОбъекта(ОбъектСсылка) Экспорт 
	
	ИмяМетаданных = ОбъектСсылка.Метаданные().Имя;
	Объект = СтрШаблон(	"{name: ""%1"", object: ""%2""}", 
						ИмяМетаданных, 
						Строка(ОбъектСсылка.УникальныйИдентификатор()));
	
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаСсылочнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект      = ОбъектСсылка;
	МенеджерЗаписи.ВидСобытия  = Перечисления.ТУРВ_ВидыСобытийСОбъектамиЛК.Изменение;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Новый;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДатаСеанса();
	
	Попытка		
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Информация,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				,
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС, 
																				ИмяМетаданных,
																				Объект, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКСсылочнымиДанными.ЗарегистрироватьИзменениеОбъекта"));
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС,
																				ИмяМетаданных,
																				Объект, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКСсылочнымиДанными.ЗарегистрироватьИзменениеОбъекта",
																				ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеСтатуса

Процедура ЗарегистрироватьОшибкуОбработки(ИД, ОбъектСсылка, ВидСобытия, МестоВозникновения = "", Ошибка = "") Экспорт 
	
	ИмяМетаданных = ОбъектСсылка.Метаданные().Имя;
	Объект = СтрШаблон(	"{name: ""%1"", object: ""%2""}", 
						ИмяМетаданных, 
						Строка(ОбъектСсылка.УникальныйИдентификатор()));
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаСсылочнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект      = ОбъектСсылка;
	МенеджерЗаписи.ВидСобытия  = ВидСобытия;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Ошибка;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДатаСеанса();
	
	Попытка	
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().ОшибкаОбработкиОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД,
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС, 
																				ИмяМетаданных,
																				Объект, 
																				МестоВозникновения,
																				Ошибка));
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().ОшибкаОбработкиОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД,
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС, 
																				ИмяМетаданных,
																				Объект, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКСсылочнымиДанными.ЗарегистрироватьОшибкуОбработки",
																				ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗарегистрироватьУспехОбработки(ИД, ОбъектСсылка, ВидСобытия) Экспорт 
	
	ИмяМетаданных = ОбъектСсылка.Метаданные().Имя;
	Объект = СтрШаблон(	"{name: ""%1"", object: ""%2""}", 
						ИмяМетаданных, 
						Строка(ОбъектСсылка.УникальныйИдентификатор()));
	
	МенеджерЗаписи             = РегистрыСведений.ТУРВ_ОчередьОбменаСсылочнымиДанными.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект      = ОбъектСсылка;
	МенеджерЗаписи.ВидСобытия  = ВидСобытия;
	МенеджерЗаписи.Статус      = Перечисления.ТУРВ_СтатусОбменаСЛК.Выполнен;
	МенеджерЗаписи.ДатаСобытия = ТекущаяДатаСеанса();
	
	Попытка
		МенеджерЗаписи.Записать();
		
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().РегистрацияЗаданияОчередиОбмена, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Информация,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Дебаг,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД, 
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС,
																				ИмяМетаданных,
																				Объект, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКСсылочнымиДанными.ЗарегистрироватьУспехОбработки"));
	Исключение
		ТУРВ_ЛогированиеСервер.ДобавитьЗаписьВЛог(	ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка, 
											ТУРВ_ОбменДаннымиПовтИсп.СобытияЛога().ОшибкаЛога, 
											ТУРВ_ОбменДаннымиПовтИсп.УровниСобытийЛога().Ошибка,
											ТУРВ_ЛогированиеСервер.ДанныеJSONОбъектJSON(ТУРВ_ОбменДаннымиПовтИсп.УровниЛога().Ошибка,
																				ТУРВ_ЛогированиеСервер.ТекущаяДатаЛК(),
																				ИД, 
																				ТУРВ_ОбменДаннымиПовтИсп.ТипыОбъектов().СпрС,
																				ИмяМетаданных,
																				Объект, 
																				"РегистрыСведений.ТУРБ_ОчередьОбменаСЛКСсылочнымиДанными.ЗарегистрироватьУспехОбработки",
																				ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти