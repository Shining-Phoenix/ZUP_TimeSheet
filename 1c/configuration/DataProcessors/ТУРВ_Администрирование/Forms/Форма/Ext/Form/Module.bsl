#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Логин = "user@mail.ru";
	Объект.Пароль = "Qwer1234";
	                      
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПользователя(Команда)
	
	СоздатьПользователяНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСотрудниковПоПользователю(Команда)
	
	СоздатьСотрудниковПоПользователюНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКадровуюИсторию(Команда)
	СоздатьКадровуюИсториюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	ВыполнитьОбменНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьОбменНаСервере()
	
	ТУРВ_ОбменДаннымиСервер.ВыполнитьОбмен();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПользователяНаСервере()
	
	НастройкиСервиса = ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиСервер.Логин(НастройкиСервиса));
	Результат = ТУРВ_ОбменДаннымиСервер.СоздатьПользователя(НастройкиСервиса, Токен, Объект.Пользователь, Объект.Логин, Объект.Пароль);
	
	Если ТУРВ_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
		ТУРВ_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСотрудниковПоПользователюНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
	НастройкиСервиса = ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиСервер.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Результат = ТУРВ_ОбменДаннымиСервер.СоздатьСотрудника(НастройкиСервиса, Токен, "", Выборка.Ссылка);
		
		Если ТУРВ_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
			ТУРВ_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКадровуюИсториюНаСервере()
	
	НастройкиСервиса = ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ТУРВ_РаботаСФункциямиКлиентСервер.Результат(ТУРВ_ОбменДаннымиСервер.Логин(НастройкиСервиса));

	ЗапросКадровойИстории = Новый Запрос;
	ЗапросКадровойИстории.Текст = 	"ВЫБРАТЬ РАЗЛИЧНЫЕ
									|	КадроваяИсторияСотрудниковИнтервальный.Сотрудник КАК Сотрудник
									|ИЗ
									|	РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК КадроваяИсторияСотрудниковИнтервальный
									|ГДЕ
									|	КадроваяИсторияСотрудниковИнтервальный.ФизическоеЛицо = &ФизическоеЛицо";
	ЗапросКадровойИстории.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
	Выборка = ЗапросКадровойИстории.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		СотрудникСсылка = Выборка.Сотрудник;
		
		Результат = ТУРВ_ОбменДаннымиСервер.СоздатьОбновитьКадровойИсториюСотрудника("", НастройкиСервиса, Токен, СотрудникСсылка);
		
		Если ТУРВ_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
			ТУРВ_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
